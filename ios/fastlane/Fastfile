# Working flatlane file on route:  # This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

before_all do
    ENV["MATCH_PASSWORD"] = "0728306459"
#     ensure_temp_keychain("kelvinwmblogs@gmail.com","0728306459")
end


def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false
  )
end

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

desc "Build ipa"
  lane :build_ipa do
#        xcversion(version: "13.0")
#        xcode_select("/Applications/Xcode_13.0.app")
#        ensure_xcode_version(version: "13.0")
#        setup_ci
#        sync_code_signing(
#           type: "appstore",
#           readonly: is_ci
#         )

       api_key = app_store_connect_api_key(
         key_id: "K73ZGL55QX",
         issuer_id: "059aa589-88cb-48fb-b7c5-4aa58ba52aed",
         key_filepath: "fastlane/testkey.p8",
         duration: 1200,
         in_house: false
        )

        previous_build_number = latest_testflight_build_number(
          api_key: api_key
        )

         match(
                type: 'appstore',
                api_key: api_key,
                readonly: is_ci
               )

        increment_version_number_in_plist(
          bump_type: 'minor' # Automatically increment minor version number
        )

        build_number = previous_build_number + 1

#        gym(
#             configuration: "Release",
#             skip_package_ipa: true,
#             workspace: "Runner.xcworkspace",
#             scheme: "Runner",
#             export_method: "app-store",
#             clean: true
#           )

#         pilot(
#
#               skip_waiting_for_build_processing: true,
#               skip_submission: true,
#               distribute_external: false,
#               notify_external_testers: false,
#               ipa: "./Runner.ipa"
# #             )

          Dir.chdir("../..") do
    #        sh "rm ios/Podfile.lock pubspec.lock &&  rm -rf ios/Pods ios/Runner.xcworkspace"
    #         sh "flutter build ipa --build-number"
             sh("flutter", "build", "ipa","--build-number=#{build_number}")
          end

      upload_to_testflight(
                   api_key: api_key,
                   skip_waiting_for_build_processing: true,
                )

    end

desc "Build a staging ipa"
  lane :build_staging_ipa do
           api_key = app_store_connect_api_key(
             key_id: "H5XN5LCL24",
             issuer_id: "bf4dfdbc-e07f-415c-9cbc-00d748d33e5a",
             key_filepath: "fastlane/AuthKey_H5XN5LCL24.p8",
             duration: 1200,
             in_house: false
            )

          increment_build_number

          match(
            type: 'appstore',
            app_identifier: ["com.beyondthehorizon.route"],
            api_key: api_key,
            readonly: true
          )

        Dir.chdir("../..") do
          sh "flutter build ipa"
          upload_to_testflight(
             api_key: api_key,
             groups: ["First Beta Group"],
             app_identifier: "com.beyondthehorizon.route",
             skip_waiting_for_build_processing: true
          )
        end
    end
  end
